Phase:firstpass
Input: DataCollection	DiseaseName	Source	SourceDisease	F81	Model	PhylogeneticInference	
JC	K80	SYM	JTT	PAM	WAG	PoissonModel	Jones	LG	MtArt	T92	TN93	GTR	HKY	GlobalMSAProgram	Program	
SequenceAlignmentProgram	GeneralMSAProgram	LocalMSAProgram	GeneralPWAProgram	GlobalPWAProgram	
LocalPWAProgram	DataFormat	DataType	Tree	SequenceAlignment	GenomeSequence	Sequence	DNASequence	
RNASequence	ProteinSequence	DistanceMatrix	DiseaseCategory	LocusTag	SourceGene	AssessmentOfUncertainty	
Method	Resampling	CharacterBasedMethod	DistanceBasedMethod	GeneralPurposePackages	BayesianProgram	
MakingDistancesProgram	DistanceBasedProgram	ComparativeMethodAnalysisProgram	TreePlottingDarwingProgram	
BootstrappingProgram	BiogeographicAnalysisProgram	SequenceManagementProgram	ClocksDatingStratigraphyProgram	
MaximumParsimonyProgram	LookingFOrHybridizationOrRecombinationEventsProgram	ConsensusTreesProgram	
MaximumLikelihoodProgram	CompatibilityAnalysisProgram	PredictionDescriptionDataFromTreesProgram	
TreeSimulationProgram	GeneDuplicationAndGenomicAnalysis	QuartetsProgram	ModelSelectionProgram	
InformationTheoryBasedProgram	BranchAndBoundTreeSearchProgram	HeuristicSearchForBestTree	DataBase	HomologsSearch	
SourceTaxon	TaxonRank	SymbolGene
Options: control = brill


/*Rule: RemoveAmbgDataCollection_1
(
 {DataCollection} 
)
:RemoveAmbgDataCollection_1
-->
{
System.out.println("A LOOKUP DataCollection ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}*/
Rule: RemoveAmbgDiseaseName_1
(
 {DiseaseName} 
)
:RemoveAmbgDiseaseName_1
-->
{
System.out.println("A LOOKUP DiseaseName ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgSource_1
(
 {Source} 
)
:RemoveAmbgSource_1
-->
{
System.out.println("A LOOKUP Source ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgSourceDisease_1
(
 {SourceDisease} 
)
:RemoveAmbgSourceDisease_1
-->
{
System.out.println("A LOOKUP SourceDisease ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgF81_1
(
 {F81} 
)
:RemoveAmbgF81_1
-->
{
System.out.println("A LOOKUP F81 ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgModel_1
(
 {Model} 
)
:RemoveAmbgModel_1
-->
{
System.out.println("A LOOKUP Model ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgPhylogeneticInference_1
(
 {PhylogeneticInference} 
)
:RemoveAmbgPhylogeneticInference_1
-->
{
System.out.println("A LOOKUP PhylogeneticInference ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgJC_1
(
 {JC} 
)
:RemoveAmbgJC_1
-->
{
System.out.println("A LOOKUP JC ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgK80_1
(
 {K80} 
)
:RemoveAmbgK80_1
-->
{
System.out.println("A LOOKUP K80 ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgSYM_1
(
 {SYM} 
)
:RemoveAmbgSYM_1
-->
{
System.out.println("A LOOKUP SYM ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgJTT_1
(
 {JTT} 
)
:RemoveAmbgJTT_1
-->
{
System.out.println("A LOOKUP JTT ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgPAM_1
(
 {PAM} 
)
:RemoveAmbgPAM_1
-->
{
System.out.println("A LOOKUP PAM ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgWAG_1
(
 {WAG} 
)
:RemoveAmbgWAG_1
-->
{
System.out.println("A LOOKUP WAG ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgPoissonModel_1
(
 {PoissonModel} 
)
:RemoveAmbgPoissonModel_1
-->
{
System.out.println("A LOOKUP PoissonModel ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgJones_1
(
 {Jones} 
)
:RemoveAmbgJones_1
-->
{
System.out.println("A LOOKUP Jones ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgLG_1
(
 {LG} 
)
:RemoveAmbgLG_1
-->
{
System.out.println("A LOOKUP LG ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgMtArt_1
(
 {MtArt} 
)
:RemoveAmbgMtArt_1
-->
{
System.out.println("A LOOKUP MtArt ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgT92_1
(
 {T92} 
)
:RemoveAmbgT92_1
-->
{
System.out.println("A LOOKUP T92 ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgTN93_1
(
 {TN93} 
)
:RemoveAmbgTN93_1
-->
{
System.out.println("A LOOKUP TN93 ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgGTR_1
(
 {GTR} 
)
:RemoveAmbgGTR_1
-->
{
System.out.println("A LOOKUP GTR ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgHKY_1
(
 {HKY} 
)
:RemoveAmbgHKY_1
-->
{
System.out.println("A LOOKUP HKY ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgGlobalMSAProgram_1
(
 {GlobalMSAProgram} 
)
:RemoveAmbgGlobalMSAProgram_1
-->
{
System.out.println("A LOOKUP GlobalMSAProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgProgram_1
(
 {Program} 
)
:RemoveAmbgProgram_1
-->
{
System.out.println("A LOOKUP Program ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgSequenceAlignmentProgram_1
(
 {SequenceAlignmentProgram} 
)
:RemoveAmbgSequenceAlignmentProgram_1
-->
{
System.out.println("A LOOKUP SequenceAlignmentProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgGeneralMSAProgram_1
(
 {GeneralMSAProgram} 
)
:RemoveAmbgGeneralMSAProgram_1
-->
{
System.out.println("A LOOKUP GeneralMSAProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgLocalMSAProgram_1
(
 {LocalMSAProgram} 
)
:RemoveAmbgLocalMSAProgram_1
-->
{
System.out.println("A LOOKUP LocalMSAProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgGeneralPWAProgram_1
(
 {GeneralPWAProgram} 
)
:RemoveAmbgGeneralPWAProgram_1
-->
{
System.out.println("A LOOKUP GeneralPWAProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgGlobalPWAProgram_1
(
 {GlobalPWAProgram} 
)
:RemoveAmbgGlobalPWAProgram_1
-->
{
System.out.println("A LOOKUP GlobalPWAProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgLocalPWAProgram_1
(
 {LocalPWAProgram} 
)
:RemoveAmbgLocalPWAProgram_1
-->
{
System.out.println("A LOOKUP LocalPWAProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgDataFormat_1
(
 {DataFormat} 
)
:RemoveAmbgDataFormat_1
-->
{
System.out.println("A LOOKUP DataFormat ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgDataType_1
(
 {DataType} 
)
:RemoveAmbgDataType_1
-->
{
System.out.println("A LOOKUP DataType ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgTree_1
(
 {Tree} 
)
:RemoveAmbgTree_1
-->
{
System.out.println("A LOOKUP Tree ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgSequenceAlignment_1
(
 {SequenceAlignment} 
)
:RemoveAmbgSequenceAlignment_1
-->
{
System.out.println("A LOOKUP SequenceAlignment ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgGenomeSequence_1
(
 {GenomeSequence} 
)
:RemoveAmbgGenomeSequence_1
-->
{
System.out.println("A LOOKUP GenomeSequence ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgSequence_1
(
 {Sequence} 
)
:RemoveAmbgSequence_1
-->
{
System.out.println("A LOOKUP Sequence ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgDNASequence_1
(
 {DNASequence} 
)
:RemoveAmbgDNASequence_1
-->
{
System.out.println("A LOOKUP DNASequence ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgRNASequence_1
(
 {RNASequence} 
)
:RemoveAmbgRNASequence_1
-->
{
System.out.println("A LOOKUP RNASequence ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgProteinSequence_1
(
 {ProteinSequence} 
)
:RemoveAmbgProteinSequence_1
-->
{
System.out.println("A LOOKUP ProteinSequence ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgDistanceMatrix_1
(
 {DistanceMatrix} 
)
:RemoveAmbgDistanceMatrix_1
-->
{
System.out.println("A LOOKUP DistanceMatrix ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgDiseaseCategory_1
(
 {DiseaseCategory} 
)
:RemoveAmbgDiseaseCategory_1
-->
{
System.out.println("A LOOKUP DiseaseCategory ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgLocusTag_1
(
 {LocusTag} 
)
:RemoveAmbgLocusTag_1
-->
{
System.out.println("A LOOKUP LocusTag ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgSourceGene_1
(
 {SourceGene} 
)
:RemoveAmbgSourceGene_1
-->
{
System.out.println("A LOOKUP SourceGene ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgAssessmentOfUncertainty_1
(
 {AssessmentOfUncertainty} 
)
:RemoveAmbgAssessmentOfUncertainty_1
-->
{
System.out.println("A LOOKUP AssessmentOfUncertainty ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgMethod_1
(
 {Method} 
)
:RemoveAmbgMethod_1
-->
{
System.out.println("A LOOKUP Method ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgResampling_1
(
 {Resampling} 
)
:RemoveAmbgResampling_1
-->
{
System.out.println("A LOOKUP Resampling ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgCharacterBasedMethod_1
(
 {CharacterBasedMethod} 
)
:RemoveAmbgCharacterBasedMethod_1
-->
{
System.out.println("A LOOKUP CharacterBasedMethod ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgDistanceBasedMethod_1
(
 {DistanceBasedMethod} 
)
:RemoveAmbgDistanceBasedMethod_1
-->
{
System.out.println("A LOOKUP DistanceBasedMethod ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgGeneralPurposePackages_1
(
 {GeneralPurposePackages} 
)
:RemoveAmbgGeneralPurposePackages_1
-->
{
System.out.println("A LOOKUP GeneralPurposePackages ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgBayesianProgram_1
(
 {BayesianProgram} 
)
:RemoveAmbgBayesianProgram_1
-->
{
System.out.println("A LOOKUP BayesianProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgMakingDistancesProgram_1
(
 {MakingDistancesProgram} 
)
:RemoveAmbgMakingDistancesProgram_1
-->
{
System.out.println("A LOOKUP MakingDistancesProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgDistanceBasedProgram_1
(
 {DistanceBasedProgram} 
)
:RemoveAmbgDistanceBasedProgram_1
-->
{
System.out.println("A LOOKUP DistanceBasedProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgComparativeMethodAnalysisProgram_1
(
 {ComparativeMethodAnalysisProgram} 
)
:RemoveAmbgComparativeMethodAnalysisProgram_1
-->
{
System.out.println("A LOOKUP ComparativeMethodAnalysisProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgTreePlottingDarwingProgram_1
(
 {TreePlottingDarwingProgram} 
)
:RemoveAmbgTreePlottingDarwingProgram_1
-->
{
System.out.println("A LOOKUP TreePlottingDarwingProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgBootstrappingProgram_1
(
 {BootstrappingProgram} 
)
:RemoveAmbgBootstrappingProgram_1
-->
{
System.out.println("A LOOKUP BootstrappingProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgBiogeographicAnalysisProgram_1
(
 {BiogeographicAnalysisProgram} 
)
:RemoveAmbgBiogeographicAnalysisProgram_1
-->
{
System.out.println("A LOOKUP BiogeographicAnalysisProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgSequenceManagementProgram_1
(
 {SequenceManagementProgram} 
)
:RemoveAmbgSequenceManagementProgram_1
-->
{
System.out.println("A LOOKUP SequenceManagementProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgClocksDatingStratigraphyProgram_1
(
 {ClocksDatingStratigraphyProgram} 
)
:RemoveAmbgClocksDatingStratigraphyProgram_1
-->
{
System.out.println("A LOOKUP ClocksDatingStratigraphyProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgMaximumParsimonyProgram_1
(
 {MaximumParsimonyProgram} 
)
:RemoveAmbgMaximumParsimonyProgram_1
-->
{
System.out.println("A LOOKUP MaximumParsimonyProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgLookingFOrHybridizationOrRecombinationEventsProgram_1
(
 {LookingFOrHybridizationOrRecombinationEventsProgram} 
)
:RemoveAmbgLookingFOrHybridizationOrRecombinationEventsProgram_1
-->
{
System.out.println("A LOOKUP LookingFOrHybridizationOrRecombinationEventsProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgConsensusTreesProgram_1
(
 {ConsensusTreesProgram} 
)
:RemoveAmbgConsensusTreesProgram_1
-->
{
System.out.println("A LOOKUP ConsensusTreesProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgMaximumLikelihoodProgram_1
(
 {MaximumLikelihoodProgram} 
)
:RemoveAmbgMaximumLikelihoodProgram_1
-->
{
System.out.println("A LOOKUP MaximumLikelihoodProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgCompatibilityAnalysisProgram_1
(
 {CompatibilityAnalysisProgram} 
)
:RemoveAmbgCompatibilityAnalysisProgram_1
-->
{
System.out.println("A LOOKUP CompatibilityAnalysisProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgPredictionDescriptionDataFromTreesProgram_1
(
 {PredictionDescriptionDataFromTreesProgram} 
)
:RemoveAmbgPredictionDescriptionDataFromTreesProgram_1
-->
{
System.out.println("A LOOKUP PredictionDescriptionDataFromTreesProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgTreeSimulationProgram_1
(
 {TreeSimulationProgram} 
)
:RemoveAmbgTreeSimulationProgram_1
-->
{
System.out.println("A LOOKUP TreeSimulationProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgGeneDuplicationAndGenomicAnalysis_1
(
 {GeneDuplicationAndGenomicAnalysis} 
)
:RemoveAmbgGeneDuplicationAndGenomicAnalysis_1
-->
{
System.out.println("A LOOKUP GeneDuplicationAndGenomicAnalysis ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgQuartetsProgram_1
(
 {QuartetsProgram} 
)
:RemoveAmbgQuartetsProgram_1
-->
{
System.out.println("A LOOKUP QuartetsProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgModelSelectionProgram_1
(
 {ModelSelectionProgram} 
)
:RemoveAmbgModelSelectionProgram_1
-->
{
System.out.println("A LOOKUP ModelSelectionProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgInformationTheoryBasedProgram_1
(
 {InformationTheoryBasedProgram} 
)
:RemoveAmbgInformationTheoryBasedProgram_1
-->
{
System.out.println("A LOOKUP InformationTheoryBasedProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgBranchAndBoundTreeSearchProgram_1
(
 {BranchAndBoundTreeSearchProgram} 
)
:RemoveAmbgBranchAndBoundTreeSearchProgram_1
-->
{
System.out.println("A LOOKUP BranchAndBoundTreeSearchProgram ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgHeuristicSearchForBestTree_1
(
 {HeuristicSearchForBestTree} 
)
:RemoveAmbgHeuristicSearchForBestTree_1
-->
{
System.out.println("A LOOKUP HeuristicSearchForBestTree ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgDataBase_1
(
 {DataBase} 
)
:RemoveAmbgDataBase_1
-->
{
System.out.println("A LOOKUP DataBase ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgHomologsSearch_1
(
 {HomologsSearch} 
)
:RemoveAmbgHomologsSearch_1
-->
{
System.out.println("A LOOKUP HomologsSearch ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgSourceTaxon_1
(
 {SourceTaxon} 
)
:RemoveAmbgSourceTaxon_1
-->
{
System.out.println("A LOOKUP SourceTaxon ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgTaxonRank_1
(
 {TaxonRank} 
)
:RemoveAmbgTaxonRank_1
-->
{
System.out.println("A LOOKUP TaxonRank ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}
Rule: RemoveAmbgSymbolGene_1
(
 {SymbolGene} 
)
:RemoveAmbgSymbolGene_1
-->
{
System.out.println("A LOOKUP SymbolGene ANNOTATION IS DELETED. --  confused with a general lookup (person, time, place, etc.)" );
	inputAS.removeAll(bindings.get("temp"));
}